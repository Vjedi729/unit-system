import {IfEq} from './typeEqual'
type LessThanHelper<X extends number, Y extends number, Fallback extends boolean> = 

IfEq<X, -5,
	IfEq<Y, -5, false,
	IfEq<Y, -4, true,
	IfEq<Y, -3, true,
	IfEq<Y, -2, true,
	IfEq<Y, -1, true,
	IfEq<Y, 2, true,
	IfEq<Y, 3, true,
	IfEq<Y, 4, true,
	IfEq<Y, 5, true,
	Fallback
	>>>>>>>>>,
IfEq<X, -4,
	IfEq<Y, -5, false,
	IfEq<Y, -4, false,
	IfEq<Y, -3, true,
	IfEq<Y, -2, true,
	IfEq<Y, -1, true,
	IfEq<Y, 2, true,
	IfEq<Y, 3, true,
	IfEq<Y, 4, true,
	IfEq<Y, 5, true,
	Fallback
	>>>>>>>>>,
IfEq<X, -3,
	IfEq<Y, -5, false,
	IfEq<Y, -4, false,
	IfEq<Y, -3, false,
	IfEq<Y, -2, true,
	IfEq<Y, -1, true,
	IfEq<Y, 2, true,
	IfEq<Y, 3, true,
	IfEq<Y, 4, true,
	IfEq<Y, 5, true,
	Fallback
	>>>>>>>>>,
IfEq<X, -2,
	IfEq<Y, -5, false,
	IfEq<Y, -4, false,
	IfEq<Y, -3, false,
	IfEq<Y, -2, false,
	IfEq<Y, -1, true,
	IfEq<Y, 2, true,
	IfEq<Y, 3, true,
	IfEq<Y, 4, true,
	IfEq<Y, 5, true,
	Fallback
	>>>>>>>>>,
IfEq<X, -1,
	IfEq<Y, -5, false,
	IfEq<Y, -4, false,
	IfEq<Y, -3, false,
	IfEq<Y, -2, false,
	IfEq<Y, -1, false,
	IfEq<Y, 2, true,
	IfEq<Y, 3, true,
	IfEq<Y, 4, true,
	IfEq<Y, 5, true,
	Fallback
	>>>>>>>>>,
IfEq<X, 2,
	IfEq<Y, -5, false,
	IfEq<Y, -4, false,
	IfEq<Y, -3, false,
	IfEq<Y, -2, false,
	IfEq<Y, -1, false,
	IfEq<Y, 2, false,
	IfEq<Y, 3, true,
	IfEq<Y, 4, true,
	IfEq<Y, 5, true,
	Fallback
	>>>>>>>>>,
IfEq<X, 3,
	IfEq<Y, -5, false,
	IfEq<Y, -4, false,
	IfEq<Y, -3, false,
	IfEq<Y, -2, false,
	IfEq<Y, -1, false,
	IfEq<Y, 2, false,
	IfEq<Y, 3, false,
	IfEq<Y, 4, true,
	IfEq<Y, 5, true,
	Fallback
	>>>>>>>>>,
IfEq<X, 4,
	IfEq<Y, -5, false,
	IfEq<Y, -4, false,
	IfEq<Y, -3, false,
	IfEq<Y, -2, false,
	IfEq<Y, -1, false,
	IfEq<Y, 2, false,
	IfEq<Y, 3, false,
	IfEq<Y, 4, false,
	IfEq<Y, 5, true,
	Fallback
	>>>>>>>>>,
IfEq<X, 5,
	IfEq<Y, -5, false,
	IfEq<Y, -4, false,
	IfEq<Y, -3, false,
	IfEq<Y, -2, false,
	IfEq<Y, -1, false,
	IfEq<Y, 2, false,
	IfEq<Y, 3, false,
	IfEq<Y, 4, false,
	IfEq<Y, 5, false,
	Fallback
	>>>>>>>>>,
Fallback
>>>>>>>>>
;

type LessThanFallback = boolean;
export type LessThan<X extends number, Y extends number> = IfEq<X, number, boolean, IfEq<Y, number, boolean, LessThanHelper<X, Y, LessThanFallback>>>